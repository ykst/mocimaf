// *** WARNING ***
// This file is generated by gen6502.rb
// Keep untouched or ruin the abstraction
// generated file
#pragma once
#include "cpu.h"
#include "cpu_decode.h"
#include "cpu_decode_official.h"
#include "cpu_decode_unofficial.h"
#include "utils.h"

static inline void cpu_decode_internal(cpu_t *self)
{
    uint8_t op = cpu_fetch(self);

    switch (op) {
    case OP_00_BRK: {
        cpu_decode_00_brk(self);
        // fetch next instruction and throw it away
        (void)cpu_read(self, self->reg.pc);
        break;
    }
    case OP_01_ORA: {
        uint16_t addr = fetch_pre_indirect_x(self, true);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_01_ora(self, value);
        break;
    }
    case OP_02_STP_UNOFFICIAL: {
        cpu_decode_unofficial_02_stp(self);
        // fetch next instruction and throw it away
        (void)cpu_read(self, self->reg.pc);
        break;
    }
    case OP_03_SLO_UNOFFICIAL: {
        uint16_t addr = fetch_pre_indirect_x(self, false);
        cpu_decode_unofficial_03_slo(self, addr);
        break;
    }
    case OP_04_NOP_UNOFFICIAL: {
        uint16_t addr = fetch_zero_page(self);
        (void)cpu_read(self, addr);
        // NOP
        break;
    }
    case OP_05_ORA: {
        uint16_t addr = fetch_zero_page(self);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_01_ora(self, value);
        break;
    }
    case OP_06_ASL: {
        uint16_t addr = fetch_zero_page(self);
        cpu_decode_06_asl(self, addr);
        break;
    }
    case OP_07_SLO_UNOFFICIAL: {
        uint16_t addr = fetch_zero_page(self);
        cpu_decode_unofficial_03_slo(self, addr);
        break;
    }
    case OP_08_PHP: {
        cpu_decode_08_php(self);
        // fetch next instruction and throw it away
        (void)cpu_read(self, self->reg.pc);
        break;
    }
    case OP_09_ORA: {
        uint8_t value = fetch_immediate(self);
        cpu_decode_01_ora(self, value);
        break;
    }
    case OP_0A_ASL: {
        cpu_decode_0A_asl(self);
        // fetch next instruction and throw it away
        (void)cpu_read(self, self->reg.pc);
        break;
    }
    case OP_0B_ANC_UNOFFICIAL: {
        uint8_t value = fetch_immediate(self);
        cpu_decode_unofficial_0B_anc(self, value);
        break;
    }
    case OP_0C_NOP_UNOFFICIAL: {
        uint16_t addr = fetch_absolute(self, true);
        (void)cpu_read(self, addr);
        // NOP
        break;
    }
    case OP_0D_ORA: {
        uint16_t addr = fetch_absolute(self, true);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_01_ora(self, value);
        break;
    }
    case OP_0E_ASL: {
        uint16_t addr = fetch_absolute(self, false);
        cpu_decode_06_asl(self, addr);
        break;
    }
    case OP_0F_SLO_UNOFFICIAL: {
        uint16_t addr = fetch_absolute(self, false);
        cpu_decode_unofficial_03_slo(self, addr);
        break;
    }
    case OP_10_BPL: {
        uint16_t addr = fetch_relative(self);
        cpu_decode_10_bpl(self, addr);
        break;
    }
    case OP_11_ORA: {
        uint16_t addr = fetch_post_indirect_y(self, true);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_01_ora(self, value);
        break;
    }
    case OP_12_STP_UNOFFICIAL: {
        cpu_decode_unofficial_02_stp(self);
        // fetch next instruction and throw it away
        (void)cpu_read(self, self->reg.pc);
        break;
    }
    case OP_13_SLO_UNOFFICIAL: {
        uint16_t addr = fetch_post_indirect_y(self, false);
        cpu_decode_unofficial_03_slo(self, addr);
        break;
    }
    case OP_14_NOP_UNOFFICIAL: {
        uint16_t addr = fetch_zero_page_x(self);
        (void)cpu_read(self, addr);
        // NOP
        break;
    }
    case OP_15_ORA: {
        uint16_t addr = fetch_zero_page_x(self);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_01_ora(self, value);
        break;
    }
    case OP_16_ASL: {
        uint16_t addr = fetch_zero_page_x(self);
        cpu_decode_06_asl(self, addr);
        break;
    }
    case OP_17_SLO_UNOFFICIAL: {
        uint16_t addr = fetch_zero_page_x(self);
        cpu_decode_unofficial_03_slo(self, addr);
        break;
    }
    case OP_18_CLC: {
        cpu_decode_18_clc(self);
        // fetch next instruction and throw it away
        (void)cpu_read(self, self->reg.pc);
        break;
    }
    case OP_19_ORA: {
        uint16_t addr = fetch_absolute_y(self, true);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_01_ora(self, value);
        break;
    }
    case OP_1A_NOP_UNOFFICIAL: {
        // NOP
        // fetch next instruction and throw it away
        (void)cpu_read(self, self->reg.pc);
        break;
    }
    case OP_1B_SLO_UNOFFICIAL: {
        uint16_t addr = fetch_absolute_y(self, false);
        cpu_decode_unofficial_03_slo(self, addr);
        break;
    }
    case OP_1C_NOP_UNOFFICIAL: {
        uint16_t addr = fetch_absolute_x(self, true);
        (void)cpu_read(self, addr);
        // NOP
        break;
    }
    case OP_1D_ORA: {
        uint16_t addr = fetch_absolute_x(self, true);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_01_ora(self, value);
        break;
    }
    case OP_1E_ASL: {
        uint16_t addr = fetch_absolute_x(self, false);
        cpu_decode_06_asl(self, addr);
        break;
    }
    case OP_1F_SLO_UNOFFICIAL: {
        uint16_t addr = fetch_absolute_x(self, false);
        cpu_decode_unofficial_03_slo(self, addr);
        break;
    }
    case OP_20_JSR: {
        uint16_t addr = fetch_absolute(self, false);
        cpu_decode_20_jsr(self, addr);
        break;
    }
    case OP_21_AND: {
        uint16_t addr = fetch_pre_indirect_x(self, true);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_21_and(self, value);
        break;
    }
    case OP_22_STP_UNOFFICIAL: {
        cpu_decode_unofficial_02_stp(self);
        // fetch next instruction and throw it away
        (void)cpu_read(self, self->reg.pc);
        break;
    }
    case OP_23_RLA_UNOFFICIAL: {
        uint16_t addr = fetch_pre_indirect_x(self, false);
        cpu_decode_unofficial_23_rla(self, addr);
        break;
    }
    case OP_24_BIT: {
        uint16_t addr = fetch_zero_page(self);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_24_bit(self, value);
        break;
    }
    case OP_25_AND: {
        uint16_t addr = fetch_zero_page(self);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_21_and(self, value);
        break;
    }
    case OP_26_ROL: {
        uint16_t addr = fetch_zero_page(self);
        cpu_decode_26_rol(self, addr);
        break;
    }
    case OP_27_RLA_UNOFFICIAL: {
        uint16_t addr = fetch_zero_page(self);
        cpu_decode_unofficial_23_rla(self, addr);
        break;
    }
    case OP_28_PLP: {
        cpu_decode_28_plp(self);
        // fetch next instruction and throw it away
        (void)cpu_read(self, self->reg.pc);
        break;
    }
    case OP_29_AND: {
        uint8_t value = fetch_immediate(self);
        cpu_decode_21_and(self, value);
        break;
    }
    case OP_2A_ROL: {
        cpu_decode_2A_rol(self);
        // fetch next instruction and throw it away
        (void)cpu_read(self, self->reg.pc);
        break;
    }
    case OP_2B_ANC_UNOFFICIAL: {
        uint8_t value = fetch_immediate(self);
        cpu_decode_unofficial_0B_anc(self, value);
        break;
    }
    case OP_2C_BIT: {
        uint16_t addr = fetch_absolute(self, true);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_24_bit(self, value);
        break;
    }
    case OP_2D_AND: {
        uint16_t addr = fetch_absolute(self, true);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_21_and(self, value);
        break;
    }
    case OP_2E_ROL: {
        uint16_t addr = fetch_absolute(self, false);
        cpu_decode_26_rol(self, addr);
        break;
    }
    case OP_2F_RLA_UNOFFICIAL: {
        uint16_t addr = fetch_absolute(self, false);
        cpu_decode_unofficial_23_rla(self, addr);
        break;
    }
    case OP_30_BMI: {
        uint16_t addr = fetch_relative(self);
        cpu_decode_30_bmi(self, addr);
        break;
    }
    case OP_31_AND: {
        uint16_t addr = fetch_post_indirect_y(self, true);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_21_and(self, value);
        break;
    }
    case OP_32_STP_UNOFFICIAL: {
        cpu_decode_unofficial_02_stp(self);
        // fetch next instruction and throw it away
        (void)cpu_read(self, self->reg.pc);
        break;
    }
    case OP_33_RLA_UNOFFICIAL: {
        uint16_t addr = fetch_post_indirect_y(self, false);
        cpu_decode_unofficial_23_rla(self, addr);
        break;
    }
    case OP_34_NOP_UNOFFICIAL: {
        uint16_t addr = fetch_zero_page_x(self);
        (void)cpu_read(self, addr);
        // NOP
        break;
    }
    case OP_35_AND: {
        uint16_t addr = fetch_zero_page_x(self);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_21_and(self, value);
        break;
    }
    case OP_36_ROL: {
        uint16_t addr = fetch_zero_page_x(self);
        cpu_decode_26_rol(self, addr);
        break;
    }
    case OP_37_RLA_UNOFFICIAL: {
        uint16_t addr = fetch_zero_page_x(self);
        cpu_decode_unofficial_23_rla(self, addr);
        break;
    }
    case OP_38_SEC: {
        cpu_decode_38_sec(self);
        // fetch next instruction and throw it away
        (void)cpu_read(self, self->reg.pc);
        break;
    }
    case OP_39_AND: {
        uint16_t addr = fetch_absolute_y(self, true);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_21_and(self, value);
        break;
    }
    case OP_3A_NOP_UNOFFICIAL: {
        // NOP
        // fetch next instruction and throw it away
        (void)cpu_read(self, self->reg.pc);
        break;
    }
    case OP_3B_RLA_UNOFFICIAL: {
        uint16_t addr = fetch_absolute_y(self, false);
        cpu_decode_unofficial_23_rla(self, addr);
        break;
    }
    case OP_3C_NOP_UNOFFICIAL: {
        uint16_t addr = fetch_absolute_x(self, true);
        (void)cpu_read(self, addr);
        // NOP
        break;
    }
    case OP_3D_AND: {
        uint16_t addr = fetch_absolute_x(self, true);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_21_and(self, value);
        break;
    }
    case OP_3E_ROL: {
        uint16_t addr = fetch_absolute_x(self, false);
        cpu_decode_26_rol(self, addr);
        break;
    }
    case OP_3F_RLA_UNOFFICIAL: {
        uint16_t addr = fetch_absolute_x(self, false);
        cpu_decode_unofficial_23_rla(self, addr);
        break;
    }
    case OP_40_RTI: {
        cpu_decode_40_rti(self);
        // fetch next instruction and throw it away
        (void)cpu_read(self, self->reg.pc);
        break;
    }
    case OP_41_EOR: {
        uint16_t addr = fetch_pre_indirect_x(self, true);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_41_eor(self, value);
        break;
    }
    case OP_42_STP_UNOFFICIAL: {
        cpu_decode_unofficial_02_stp(self);
        // fetch next instruction and throw it away
        (void)cpu_read(self, self->reg.pc);
        break;
    }
    case OP_43_SRE_UNOFFICIAL: {
        uint16_t addr = fetch_pre_indirect_x(self, false);
        cpu_decode_unofficial_43_sre(self, addr);
        break;
    }
    case OP_44_NOP_UNOFFICIAL: {
        uint16_t addr = fetch_zero_page(self);
        (void)cpu_read(self, addr);
        // NOP
        break;
    }
    case OP_45_EOR: {
        uint16_t addr = fetch_zero_page(self);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_41_eor(self, value);
        break;
    }
    case OP_46_LSR: {
        uint16_t addr = fetch_zero_page(self);
        cpu_decode_46_lsr(self, addr);
        break;
    }
    case OP_47_SRE_UNOFFICIAL: {
        uint16_t addr = fetch_zero_page(self);
        cpu_decode_unofficial_43_sre(self, addr);
        break;
    }
    case OP_48_PHA: {
        cpu_decode_48_pha(self);
        // fetch next instruction and throw it away
        (void)cpu_read(self, self->reg.pc);
        break;
    }
    case OP_49_EOR: {
        uint8_t value = fetch_immediate(self);
        cpu_decode_41_eor(self, value);
        break;
    }
    case OP_4A_LSR: {
        cpu_decode_4A_lsr(self);
        // fetch next instruction and throw it away
        (void)cpu_read(self, self->reg.pc);
        break;
    }
    case OP_4B_ALR_UNOFFICIAL: {
        uint8_t value = fetch_immediate(self);
        cpu_decode_unofficial_4B_alr(self, value);
        break;
    }
    case OP_4C_JMP: {
        uint16_t addr = fetch_absolute(self, false);
        cpu_decode_4C_jmp(self, addr);
        break;
    }
    case OP_4D_EOR: {
        uint16_t addr = fetch_absolute(self, true);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_41_eor(self, value);
        break;
    }
    case OP_4E_LSR: {
        uint16_t addr = fetch_absolute(self, false);
        cpu_decode_46_lsr(self, addr);
        break;
    }
    case OP_4F_SRE_UNOFFICIAL: {
        uint16_t addr = fetch_absolute(self, false);
        cpu_decode_unofficial_43_sre(self, addr);
        break;
    }
    case OP_50_BVC: {
        uint16_t addr = fetch_relative(self);
        cpu_decode_50_bvc(self, addr);
        break;
    }
    case OP_51_EOR: {
        uint16_t addr = fetch_post_indirect_y(self, true);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_41_eor(self, value);
        break;
    }
    case OP_52_STP_UNOFFICIAL: {
        cpu_decode_unofficial_02_stp(self);
        // fetch next instruction and throw it away
        (void)cpu_read(self, self->reg.pc);
        break;
    }
    case OP_53_SRE_UNOFFICIAL: {
        uint16_t addr = fetch_post_indirect_y(self, false);
        cpu_decode_unofficial_43_sre(self, addr);
        break;
    }
    case OP_54_NOP_UNOFFICIAL: {
        uint16_t addr = fetch_zero_page_x(self);
        (void)cpu_read(self, addr);
        // NOP
        break;
    }
    case OP_55_EOR: {
        uint16_t addr = fetch_zero_page_x(self);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_41_eor(self, value);
        break;
    }
    case OP_56_LSR: {
        uint16_t addr = fetch_zero_page_x(self);
        cpu_decode_46_lsr(self, addr);
        break;
    }
    case OP_57_SRE_UNOFFICIAL: {
        uint16_t addr = fetch_zero_page_x(self);
        cpu_decode_unofficial_43_sre(self, addr);
        break;
    }
    case OP_58_CLI: {
        cpu_decode_58_cli(self);
        // fetch next instruction and throw it away
        (void)cpu_read(self, self->reg.pc);
        break;
    }
    case OP_59_EOR: {
        uint16_t addr = fetch_absolute_y(self, true);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_41_eor(self, value);
        break;
    }
    case OP_5A_NOP_UNOFFICIAL: {
        // NOP
        // fetch next instruction and throw it away
        (void)cpu_read(self, self->reg.pc);
        break;
    }
    case OP_5B_SRE_UNOFFICIAL: {
        uint16_t addr = fetch_absolute_y(self, false);
        cpu_decode_unofficial_43_sre(self, addr);
        break;
    }
    case OP_5C_NOP_UNOFFICIAL: {
        uint16_t addr = fetch_absolute_x(self, true);
        (void)cpu_read(self, addr);
        // NOP
        break;
    }
    case OP_5D_EOR: {
        uint16_t addr = fetch_absolute_x(self, true);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_41_eor(self, value);
        break;
    }
    case OP_5E_LSR: {
        uint16_t addr = fetch_absolute_x(self, false);
        cpu_decode_46_lsr(self, addr);
        break;
    }
    case OP_5F_SRE_UNOFFICIAL: {
        uint16_t addr = fetch_absolute_x(self, false);
        cpu_decode_unofficial_43_sre(self, addr);
        break;
    }
    case OP_60_RTS: {
        cpu_decode_60_rts(self);
        // fetch next instruction and throw it away
        (void)cpu_read(self, self->reg.pc);
        break;
    }
    case OP_61_ADC: {
        uint16_t addr = fetch_pre_indirect_x(self, true);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_61_adc(self, value);
        break;
    }
    case OP_62_STP_UNOFFICIAL: {
        cpu_decode_unofficial_02_stp(self);
        // fetch next instruction and throw it away
        (void)cpu_read(self, self->reg.pc);
        break;
    }
    case OP_63_RRA_UNOFFICIAL: {
        uint16_t addr = fetch_pre_indirect_x(self, false);
        cpu_decode_unofficial_63_rra(self, addr);
        break;
    }
    case OP_64_NOP_UNOFFICIAL: {
        uint16_t addr = fetch_zero_page(self);
        (void)cpu_read(self, addr);
        // NOP
        break;
    }
    case OP_65_ADC: {
        uint16_t addr = fetch_zero_page(self);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_61_adc(self, value);
        break;
    }
    case OP_66_ROR: {
        uint16_t addr = fetch_zero_page(self);
        cpu_decode_66_ror(self, addr);
        break;
    }
    case OP_67_RRA_UNOFFICIAL: {
        uint16_t addr = fetch_zero_page(self);
        cpu_decode_unofficial_63_rra(self, addr);
        break;
    }
    case OP_68_PLA: {
        cpu_decode_68_pla(self);
        // fetch next instruction and throw it away
        (void)cpu_read(self, self->reg.pc);
        break;
    }
    case OP_69_ADC: {
        uint8_t value = fetch_immediate(self);
        cpu_decode_61_adc(self, value);
        break;
    }
    case OP_6A_ROR: {
        cpu_decode_6A_ror(self);
        // fetch next instruction and throw it away
        (void)cpu_read(self, self->reg.pc);
        break;
    }
    case OP_6B_ARR_UNOFFICIAL: {
        uint8_t value = fetch_immediate(self);
        cpu_decode_unofficial_6B_arr(self, value);
        break;
    }
    case OP_6C_JMP: {
        uint16_t addr = fetch_indirect(self);
        cpu_decode_4C_jmp(self, addr);
        break;
    }
    case OP_6D_ADC: {
        uint16_t addr = fetch_absolute(self, true);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_61_adc(self, value);
        break;
    }
    case OP_6E_ROR: {
        uint16_t addr = fetch_absolute(self, false);
        cpu_decode_66_ror(self, addr);
        break;
    }
    case OP_6F_RRA_UNOFFICIAL: {
        uint16_t addr = fetch_absolute(self, false);
        cpu_decode_unofficial_63_rra(self, addr);
        break;
    }
    case OP_70_BVS: {
        uint16_t addr = fetch_relative(self);
        cpu_decode_70_bvs(self, addr);
        break;
    }
    case OP_71_ADC: {
        uint16_t addr = fetch_post_indirect_y(self, true);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_61_adc(self, value);
        break;
    }
    case OP_72_STP_UNOFFICIAL: {
        cpu_decode_unofficial_02_stp(self);
        // fetch next instruction and throw it away
        (void)cpu_read(self, self->reg.pc);
        break;
    }
    case OP_73_RRA_UNOFFICIAL: {
        uint16_t addr = fetch_post_indirect_y(self, false);
        cpu_decode_unofficial_63_rra(self, addr);
        break;
    }
    case OP_74_NOP_UNOFFICIAL: {
        uint16_t addr = fetch_zero_page_x(self);
        (void)cpu_read(self, addr);
        // NOP
        break;
    }
    case OP_75_ADC: {
        uint16_t addr = fetch_zero_page_x(self);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_61_adc(self, value);
        break;
    }
    case OP_76_ROR: {
        uint16_t addr = fetch_zero_page_x(self);
        cpu_decode_66_ror(self, addr);
        break;
    }
    case OP_77_RRA_UNOFFICIAL: {
        uint16_t addr = fetch_zero_page_x(self);
        cpu_decode_unofficial_63_rra(self, addr);
        break;
    }
    case OP_78_SEI: {
        cpu_decode_78_sei(self);
        // fetch next instruction and throw it away
        (void)cpu_read(self, self->reg.pc);
        break;
    }
    case OP_79_ADC: {
        uint16_t addr = fetch_absolute_y(self, true);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_61_adc(self, value);
        break;
    }
    case OP_7A_NOP_UNOFFICIAL: {
        // NOP
        // fetch next instruction and throw it away
        (void)cpu_read(self, self->reg.pc);
        break;
    }
    case OP_7B_RRA_UNOFFICIAL: {
        uint16_t addr = fetch_absolute_y(self, false);
        cpu_decode_unofficial_63_rra(self, addr);
        break;
    }
    case OP_7C_NOP_UNOFFICIAL: {
        uint16_t addr = fetch_absolute_x(self, true);
        (void)cpu_read(self, addr);
        // NOP
        break;
    }
    case OP_7D_ADC: {
        uint16_t addr = fetch_absolute_x(self, true);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_61_adc(self, value);
        break;
    }
    case OP_7E_ROR: {
        uint16_t addr = fetch_absolute_x(self, false);
        cpu_decode_66_ror(self, addr);
        break;
    }
    case OP_7F_RRA_UNOFFICIAL: {
        uint16_t addr = fetch_absolute_x(self, false);
        cpu_decode_unofficial_63_rra(self, addr);
        break;
    }
    case OP_80_NOP_UNOFFICIAL: {
        (void)fetch_immediate(self);
        // NOP
        break;
    }
    case OP_81_STA: {
        uint16_t addr = fetch_pre_indirect_x(self, false);
        cpu_decode_81_sta(self, addr);
        break;
    }
    case OP_82_NOP_UNOFFICIAL: {
        (void)fetch_immediate(self);
        // NOP
        break;
    }
    case OP_83_SAX_UNOFFICIAL: {
        uint16_t addr = fetch_pre_indirect_x(self, false);
        cpu_decode_unofficial_83_sax(self, addr);
        break;
    }
    case OP_84_STY: {
        uint16_t addr = fetch_zero_page(self);
        cpu_decode_84_sty(self, addr);
        break;
    }
    case OP_85_STA: {
        uint16_t addr = fetch_zero_page(self);
        cpu_decode_81_sta(self, addr);
        break;
    }
    case OP_86_STX: {
        uint16_t addr = fetch_zero_page(self);
        cpu_decode_86_stx(self, addr);
        break;
    }
    case OP_87_SAX_UNOFFICIAL: {
        uint16_t addr = fetch_zero_page(self);
        cpu_decode_unofficial_83_sax(self, addr);
        break;
    }
    case OP_88_DEY: {
        cpu_decode_88_dey(self);
        // fetch next instruction and throw it away
        (void)cpu_read(self, self->reg.pc);
        break;
    }
    case OP_89_NOP_UNOFFICIAL: {
        (void)fetch_immediate(self);
        // NOP
        break;
    }
    case OP_8A_TXA: {
        cpu_decode_8A_txa(self);
        // fetch next instruction and throw it away
        (void)cpu_read(self, self->reg.pc);
        break;
    }
    case OP_8B_XAA_UNOFFICIAL: {
        uint8_t value = fetch_immediate(self);
        cpu_decode_unofficial_8B_xaa(self, value);
        break;
    }
    case OP_8C_STY: {
        uint16_t addr = fetch_absolute(self, false);
        cpu_decode_84_sty(self, addr);
        break;
    }
    case OP_8D_STA: {
        uint16_t addr = fetch_absolute(self, false);
        cpu_decode_81_sta(self, addr);
        break;
    }
    case OP_8E_STX: {
        uint16_t addr = fetch_absolute(self, false);
        cpu_decode_86_stx(self, addr);
        break;
    }
    case OP_8F_SAX_UNOFFICIAL: {
        uint16_t addr = fetch_absolute(self, false);
        cpu_decode_unofficial_83_sax(self, addr);
        break;
    }
    case OP_90_BCC: {
        uint16_t addr = fetch_relative(self);
        cpu_decode_90_bcc(self, addr);
        break;
    }
    case OP_91_STA: {
        uint16_t addr = fetch_post_indirect_y(self, false);
        cpu_decode_81_sta(self, addr);
        break;
    }
    case OP_92_STP_UNOFFICIAL: {
        cpu_decode_unofficial_02_stp(self);
        // fetch next instruction and throw it away
        (void)cpu_read(self, self->reg.pc);
        break;
    }
    case OP_93_AHX_UNOFFICIAL: {
        uint16_t addr = fetch_post_indirect_y(self, true);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_unofficial_93_ahx(self, value);
        break;
    }
    case OP_94_STY: {
        uint16_t addr = fetch_zero_page_x(self);
        cpu_decode_84_sty(self, addr);
        break;
    }
    case OP_95_STA: {
        uint16_t addr = fetch_zero_page_x(self);
        cpu_decode_81_sta(self, addr);
        break;
    }
    case OP_96_STX: {
        uint16_t addr = fetch_zero_page_y(self);
        cpu_decode_86_stx(self, addr);
        break;
    }
    case OP_97_SAX_UNOFFICIAL: {
        uint16_t addr = fetch_zero_page_y(self);
        cpu_decode_unofficial_83_sax(self, addr);
        break;
    }
    case OP_98_TYA: {
        cpu_decode_98_tya(self);
        // fetch next instruction and throw it away
        (void)cpu_read(self, self->reg.pc);
        break;
    }
    case OP_99_STA: {
        uint16_t addr = fetch_absolute_y(self, false);
        cpu_decode_81_sta(self, addr);
        break;
    }
    case OP_9A_TXS: {
        cpu_decode_9A_txs(self);
        // fetch next instruction and throw it away
        (void)cpu_read(self, self->reg.pc);
        break;
    }
    case OP_9B_TAS_UNOFFICIAL: {
        uint16_t addr = fetch_absolute_y(self, true);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_unofficial_9B_tas(self, value);
        break;
    }
    case OP_9C_SHY_UNOFFICIAL: {
        uint16_t addr = fetch_absolute_x(self, false);
        cpu_decode_unofficial_9C_shy(self, addr);
        break;
    }
    case OP_9D_STA: {
        uint16_t addr = fetch_absolute_x(self, false);
        cpu_decode_81_sta(self, addr);
        break;
    }
    case OP_9E_SHX_UNOFFICIAL: {
        uint16_t addr = fetch_absolute_y(self, false);
        cpu_decode_unofficial_9E_shx(self, addr);
        break;
    }
    case OP_9F_AHX_UNOFFICIAL: {
        uint16_t addr = fetch_absolute_y(self, true);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_unofficial_93_ahx(self, value);
        break;
    }
    case OP_A0_LDY: {
        uint8_t value = fetch_immediate(self);
        cpu_decode_A0_ldy(self, value);
        break;
    }
    case OP_A1_LDA: {
        uint16_t addr = fetch_pre_indirect_x(self, true);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_A1_lda(self, value);
        break;
    }
    case OP_A2_LDX: {
        uint8_t value = fetch_immediate(self);
        cpu_decode_A2_ldx(self, value);
        break;
    }
    case OP_A3_LAX_UNOFFICIAL: {
        uint16_t addr = fetch_pre_indirect_x(self, true);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_unofficial_A3_lax(self, value);
        break;
    }
    case OP_A4_LDY: {
        uint16_t addr = fetch_zero_page(self);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_A0_ldy(self, value);
        break;
    }
    case OP_A5_LDA: {
        uint16_t addr = fetch_zero_page(self);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_A1_lda(self, value);
        break;
    }
    case OP_A6_LDX: {
        uint16_t addr = fetch_zero_page(self);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_A2_ldx(self, value);
        break;
    }
    case OP_A7_LAX_UNOFFICIAL: {
        uint16_t addr = fetch_zero_page(self);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_unofficial_A3_lax(self, value);
        break;
    }
    case OP_A8_TAY: {
        cpu_decode_A8_tay(self);
        // fetch next instruction and throw it away
        (void)cpu_read(self, self->reg.pc);
        break;
    }
    case OP_A9_LDA: {
        uint8_t value = fetch_immediate(self);
        cpu_decode_A1_lda(self, value);
        break;
    }
    case OP_AA_TAX: {
        cpu_decode_AA_tax(self);
        // fetch next instruction and throw it away
        (void)cpu_read(self, self->reg.pc);
        break;
    }
    case OP_AB_LAX_UNOFFICIAL: {
        uint8_t value = fetch_immediate(self);
        cpu_decode_unofficial_A3_lax(self, value);
        break;
    }
    case OP_AC_LDY: {
        uint16_t addr = fetch_absolute(self, true);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_A0_ldy(self, value);
        break;
    }
    case OP_AD_LDA: {
        uint16_t addr = fetch_absolute(self, true);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_A1_lda(self, value);
        break;
    }
    case OP_AE_LDX: {
        uint16_t addr = fetch_absolute(self, true);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_A2_ldx(self, value);
        break;
    }
    case OP_AF_LAX_UNOFFICIAL: {
        uint16_t addr = fetch_absolute(self, true);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_unofficial_A3_lax(self, value);
        break;
    }
    case OP_B0_BCS: {
        uint16_t addr = fetch_relative(self);
        cpu_decode_B0_bcs(self, addr);
        break;
    }
    case OP_B1_LDA: {
        uint16_t addr = fetch_post_indirect_y(self, true);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_A1_lda(self, value);
        break;
    }
    case OP_B2_STP_UNOFFICIAL: {
        cpu_decode_unofficial_02_stp(self);
        // fetch next instruction and throw it away
        (void)cpu_read(self, self->reg.pc);
        break;
    }
    case OP_B3_LAX_UNOFFICIAL: {
        uint16_t addr = fetch_post_indirect_y(self, true);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_unofficial_A3_lax(self, value);
        break;
    }
    case OP_B4_LDY: {
        uint16_t addr = fetch_zero_page_x(self);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_A0_ldy(self, value);
        break;
    }
    case OP_B5_LDA: {
        uint16_t addr = fetch_zero_page_x(self);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_A1_lda(self, value);
        break;
    }
    case OP_B6_LDX: {
        uint16_t addr = fetch_zero_page_y(self);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_A2_ldx(self, value);
        break;
    }
    case OP_B7_LAX_UNOFFICIAL: {
        uint16_t addr = fetch_zero_page_y(self);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_unofficial_A3_lax(self, value);
        break;
    }
    case OP_B8_CLV: {
        cpu_decode_B8_clv(self);
        // fetch next instruction and throw it away
        (void)cpu_read(self, self->reg.pc);
        break;
    }
    case OP_B9_LDA: {
        uint16_t addr = fetch_absolute_y(self, true);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_A1_lda(self, value);
        break;
    }
    case OP_BA_TSX: {
        cpu_decode_BA_tsx(self);
        // fetch next instruction and throw it away
        (void)cpu_read(self, self->reg.pc);
        break;
    }
    case OP_BB_LAS_UNOFFICIAL: {
        uint16_t addr = fetch_absolute_y(self, true);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_unofficial_BB_las(self, value);
        break;
    }
    case OP_BC_LDY: {
        uint16_t addr = fetch_absolute_x(self, true);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_A0_ldy(self, value);
        break;
    }
    case OP_BD_LDA: {
        uint16_t addr = fetch_absolute_x(self, true);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_A1_lda(self, value);
        break;
    }
    case OP_BE_LDX: {
        uint16_t addr = fetch_absolute_y(self, true);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_A2_ldx(self, value);
        break;
    }
    case OP_BF_LAX_UNOFFICIAL: {
        uint16_t addr = fetch_absolute_y(self, true);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_unofficial_A3_lax(self, value);
        break;
    }
    case OP_C0_CPY: {
        uint8_t value = fetch_immediate(self);
        cpu_decode_C0_cpy(self, value);
        break;
    }
    case OP_C1_CMP: {
        uint16_t addr = fetch_pre_indirect_x(self, true);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_C1_cmp(self, value);
        break;
    }
    case OP_C2_NOP_UNOFFICIAL: {
        (void)fetch_immediate(self);
        // NOP
        break;
    }
    case OP_C3_DCP_UNOFFICIAL: {
        uint16_t addr = fetch_pre_indirect_x(self, false);
        cpu_decode_unofficial_C3_dcp(self, addr);
        break;
    }
    case OP_C4_CPY: {
        uint16_t addr = fetch_zero_page(self);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_C0_cpy(self, value);
        break;
    }
    case OP_C5_CMP: {
        uint16_t addr = fetch_zero_page(self);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_C1_cmp(self, value);
        break;
    }
    case OP_C6_DEC: {
        uint16_t addr = fetch_zero_page(self);
        cpu_decode_C6_dec(self, addr);
        break;
    }
    case OP_C7_DCP_UNOFFICIAL: {
        uint16_t addr = fetch_zero_page(self);
        cpu_decode_unofficial_C3_dcp(self, addr);
        break;
    }
    case OP_C8_INY: {
        cpu_decode_C8_iny(self);
        // fetch next instruction and throw it away
        (void)cpu_read(self, self->reg.pc);
        break;
    }
    case OP_C9_CMP: {
        uint8_t value = fetch_immediate(self);
        cpu_decode_C1_cmp(self, value);
        break;
    }
    case OP_CA_DEX: {
        cpu_decode_CA_dex(self);
        // fetch next instruction and throw it away
        (void)cpu_read(self, self->reg.pc);
        break;
    }
    case OP_CB_AXS_UNOFFICIAL: {
        uint8_t value = fetch_immediate(self);
        cpu_decode_unofficial_CB_axs(self, value);
        break;
    }
    case OP_CC_CPY: {
        uint16_t addr = fetch_absolute(self, true);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_C0_cpy(self, value);
        break;
    }
    case OP_CD_CMP: {
        uint16_t addr = fetch_absolute(self, true);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_C1_cmp(self, value);
        break;
    }
    case OP_CE_DEC: {
        uint16_t addr = fetch_absolute(self, false);
        cpu_decode_C6_dec(self, addr);
        break;
    }
    case OP_CF_DCP_UNOFFICIAL: {
        uint16_t addr = fetch_absolute(self, false);
        cpu_decode_unofficial_C3_dcp(self, addr);
        break;
    }
    case OP_D0_BNE: {
        uint16_t addr = fetch_relative(self);
        cpu_decode_D0_bne(self, addr);
        break;
    }
    case OP_D1_CMP: {
        uint16_t addr = fetch_post_indirect_y(self, true);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_C1_cmp(self, value);
        break;
    }
    case OP_D2_STP_UNOFFICIAL: {
        cpu_decode_unofficial_02_stp(self);
        // fetch next instruction and throw it away
        (void)cpu_read(self, self->reg.pc);
        break;
    }
    case OP_D3_DCP_UNOFFICIAL: {
        uint16_t addr = fetch_post_indirect_y(self, false);
        cpu_decode_unofficial_C3_dcp(self, addr);
        break;
    }
    case OP_D4_NOP_UNOFFICIAL: {
        uint16_t addr = fetch_zero_page_x(self);
        (void)cpu_read(self, addr);
        // NOP
        break;
    }
    case OP_D5_CMP: {
        uint16_t addr = fetch_zero_page_x(self);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_C1_cmp(self, value);
        break;
    }
    case OP_D6_DEC: {
        uint16_t addr = fetch_zero_page_x(self);
        cpu_decode_C6_dec(self, addr);
        break;
    }
    case OP_D7_DCP_UNOFFICIAL: {
        uint16_t addr = fetch_zero_page_x(self);
        cpu_decode_unofficial_C3_dcp(self, addr);
        break;
    }
    case OP_D8_CLD: {
        cpu_decode_D8_cld(self);
        // fetch next instruction and throw it away
        (void)cpu_read(self, self->reg.pc);
        break;
    }
    case OP_D9_CMP: {
        uint16_t addr = fetch_absolute_y(self, true);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_C1_cmp(self, value);
        break;
    }
    case OP_DA_NOP_UNOFFICIAL: {
        // NOP
        // fetch next instruction and throw it away
        (void)cpu_read(self, self->reg.pc);
        break;
    }
    case OP_DB_DCP_UNOFFICIAL: {
        uint16_t addr = fetch_absolute_y(self, false);
        cpu_decode_unofficial_C3_dcp(self, addr);
        break;
    }
    case OP_DC_NOP_UNOFFICIAL: {
        uint16_t addr = fetch_absolute_x(self, true);
        (void)cpu_read(self, addr);
        // NOP
        break;
    }
    case OP_DD_CMP: {
        uint16_t addr = fetch_absolute_x(self, true);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_C1_cmp(self, value);
        break;
    }
    case OP_DE_DEC: {
        uint16_t addr = fetch_absolute_x(self, false);
        cpu_decode_C6_dec(self, addr);
        break;
    }
    case OP_DF_DCP_UNOFFICIAL: {
        uint16_t addr = fetch_absolute_x(self, false);
        cpu_decode_unofficial_C3_dcp(self, addr);
        break;
    }
    case OP_E0_CPX: {
        uint8_t value = fetch_immediate(self);
        cpu_decode_E0_cpx(self, value);
        break;
    }
    case OP_E1_SBC: {
        uint16_t addr = fetch_pre_indirect_x(self, true);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_E1_sbc(self, value);
        break;
    }
    case OP_E2_NOP_UNOFFICIAL: {
        (void)fetch_immediate(self);
        // NOP
        break;
    }
    case OP_E3_ISC_UNOFFICIAL: {
        uint16_t addr = fetch_pre_indirect_x(self, false);
        cpu_decode_unofficial_E3_isc(self, addr);
        break;
    }
    case OP_E4_CPX: {
        uint16_t addr = fetch_zero_page(self);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_E0_cpx(self, value);
        break;
    }
    case OP_E5_SBC: {
        uint16_t addr = fetch_zero_page(self);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_E1_sbc(self, value);
        break;
    }
    case OP_E6_INC: {
        uint16_t addr = fetch_zero_page(self);
        cpu_decode_E6_inc(self, addr);
        break;
    }
    case OP_E7_ISC_UNOFFICIAL: {
        uint16_t addr = fetch_zero_page(self);
        cpu_decode_unofficial_E3_isc(self, addr);
        break;
    }
    case OP_E8_INX: {
        cpu_decode_E8_inx(self);
        // fetch next instruction and throw it away
        (void)cpu_read(self, self->reg.pc);
        break;
    }
    case OP_E9_SBC: {
        uint8_t value = fetch_immediate(self);
        cpu_decode_E1_sbc(self, value);
        break;
    }
    case OP_EA_NOP: {
        // NOP
        // fetch next instruction and throw it away
        (void)cpu_read(self, self->reg.pc);
        break;
    }
    case OP_EB_SBC_UNOFFICIAL: {
        uint8_t value = fetch_immediate(self);
        cpu_decode_E1_sbc(self, value);
        break;
    }
    case OP_EC_CPX: {
        uint16_t addr = fetch_absolute(self, true);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_E0_cpx(self, value);
        break;
    }
    case OP_ED_SBC: {
        uint16_t addr = fetch_absolute(self, true);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_E1_sbc(self, value);
        break;
    }
    case OP_EE_INC: {
        uint16_t addr = fetch_absolute(self, false);
        cpu_decode_E6_inc(self, addr);
        break;
    }
    case OP_EF_ISC_UNOFFICIAL: {
        uint16_t addr = fetch_absolute(self, false);
        cpu_decode_unofficial_E3_isc(self, addr);
        break;
    }
    case OP_F0_BEQ: {
        uint16_t addr = fetch_relative(self);
        cpu_decode_F0_beq(self, addr);
        break;
    }
    case OP_F1_SBC: {
        uint16_t addr = fetch_post_indirect_y(self, true);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_E1_sbc(self, value);
        break;
    }
    case OP_F2_STP_UNOFFICIAL: {
        cpu_decode_unofficial_02_stp(self);
        // fetch next instruction and throw it away
        (void)cpu_read(self, self->reg.pc);
        break;
    }
    case OP_F3_ISC_UNOFFICIAL: {
        uint16_t addr = fetch_post_indirect_y(self, false);
        cpu_decode_unofficial_E3_isc(self, addr);
        break;
    }
    case OP_F4_NOP_UNOFFICIAL: {
        uint16_t addr = fetch_zero_page_x(self);
        (void)cpu_read(self, addr);
        // NOP
        break;
    }
    case OP_F5_SBC: {
        uint16_t addr = fetch_zero_page_x(self);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_E1_sbc(self, value);
        break;
    }
    case OP_F6_INC: {
        uint16_t addr = fetch_zero_page_x(self);
        cpu_decode_E6_inc(self, addr);
        break;
    }
    case OP_F7_ISC_UNOFFICIAL: {
        uint16_t addr = fetch_zero_page_x(self);
        cpu_decode_unofficial_E3_isc(self, addr);
        break;
    }
    case OP_F8_SED: {
        cpu_decode_F8_sed(self);
        // fetch next instruction and throw it away
        (void)cpu_read(self, self->reg.pc);
        break;
    }
    case OP_F9_SBC: {
        uint16_t addr = fetch_absolute_y(self, true);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_E1_sbc(self, value);
        break;
    }
    case OP_FA_NOP_UNOFFICIAL: {
        // NOP
        // fetch next instruction and throw it away
        (void)cpu_read(self, self->reg.pc);
        break;
    }
    case OP_FB_ISC_UNOFFICIAL: {
        uint16_t addr = fetch_absolute_y(self, false);
        cpu_decode_unofficial_E3_isc(self, addr);
        break;
    }
    case OP_FC_NOP_UNOFFICIAL: {
        uint16_t addr = fetch_absolute_x(self, true);
        (void)cpu_read(self, addr);
        // NOP
        break;
    }
    case OP_FD_SBC: {
        uint16_t addr = fetch_absolute_x(self, true);
        uint8_t value = cpu_read(self, addr);
        cpu_decode_E1_sbc(self, value);
        break;
    }
    case OP_FE_INC: {
        uint16_t addr = fetch_absolute_x(self, false);
        cpu_decode_E6_inc(self, addr);
        break;
    }
    case OP_FF_ISC_UNOFFICIAL: {
        uint16_t addr = fetch_absolute_x(self, false);
        cpu_decode_unofficial_E3_isc(self, addr);
        break;
    }
    }

    self->last_op = op;
}
